<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
      <artifactId>codeready-workspaces-stacks-language-servers-dependencies</artifactId>
      <groupId>com.redhat</groupId>
      <version>2.0.0.GA-SNAPSHOT</version>
    </parent>
    <groupId>com.redhat</groupId>
    <artifactId>codeready-workspaces-stacks-language-servers-dependencies-php</artifactId>
    <version>2.0.0.GA-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>CodeReady Workspaces :: Stacks :: Language Servers :: PHP Dependencies</name>
    <properties>
        <PHP_LS_VERSION>5.4.6</PHP_LS_VERSION>
        <PHP_LS_IMAGE>php-ls:tmp</PHP_LS_IMAGE>
        <XDEBUG_BUILDER_IMAGE>php-xdebug:tmp</XDEBUG_BUILDER_IMAGE>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-assembly-xdebug</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/assembly-xdebug.xml</descriptor>
                            </descriptors>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <finalName>${project.artifactId}-xdebug-${os.arch}</finalName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-assembly-ls</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/assembly-ls.xml</descriptor>
                            </descriptors>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <finalName>${project.artifactId}-${os.arch}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!-- CRW 2 xdebug -->
                    <execution>
                        <id>download-xdebug</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${basedir}/target/php-xdebug" />
                                <!-- collect these files
                                /etc/php.ini
                                /usr/share/doc/pecl/xdebug/contrib/tracefile-analyser.php
                                /usr/share/doc/pecl/xdebug/contrib/xt.vim
                                /usr/share/doc/pecl/xdebug/CREDITS
                                /usr/share/doc/pecl/xdebug/LICENSE
                                /usr/share/doc/pecl/xdebug/xdebug.ini
                                /usr/share/doc/pecl/xdebug/README.rst
                                /usr/lib64/php/modules/xdebug.so
                                -->
                                <exec dir="${basedir}" executable="docker" failonerror="true">
                                    <arg line="build . -t ${XDEBUG_BUILDER_IMAGE} -f xdebug.Dockerfile" />
                                </exec>
                                <exec dir="${basedir}" executable="docker" failonerror="true">
                                    <arg line="run -v ${basedir}/target/php-xdebug:/xd ${XDEBUG_BUILDER_IMAGE} sh -c 'mkdir -p /xd/etc /xd/usr/share/doc/pecl/xdebug /xd/usr/lib64/php/modules/; cp /etc/php.ini /xd/etc/php.ini; cp -r /usr/share/doc/pecl/xdebug/* /xd/usr/share/doc/pecl/xdebug/; cp /usr/lib64/php/modules/xdebug.so /xd/usr/lib64/php/modules/xdebug.so; chmod -R 777 /xd'" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <!-- CRW 1.2 php-ls deps -->
                    <execution>
                        <id>download-composer-php-ls</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${basedir}/target/php-ls" />
                                <!-- collect lang server stuff - TODO are these still required? -->
                                <exec dir="${basedir}" executable="docker" failonerror="true">
                                    <arg line="build . -t ${PHP_LS_IMAGE} -f php-ls.Dockerfile" />
                                </exec>
                                <exec dir="${basedir}" executable="docker" failonerror="true">
                                    <arg line="run -v ${basedir}/target/php-ls:/php ${PHP_LS_IMAGE} sh -c 'cd /php; /usr/local/bin/composer require jetbrains/phpstorm-stubs:dev-master; /usr/local/bin/composer require felixfbecker/language-server:${PHP_LS_VERSION}; /usr/local/bin/composer run-script --working-dir=vendor/felixfbecker/language-server parse-stubs; mv vendor/* .; rm -rf vendor; cp /usr/local/bin/composer /php/composer; chmod -R 777 /php/*'" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <!-- cleanup temp docker images when done -->
                    <execution>
                        <id>delete-docker-images</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec dir="${basedir}" executable="docker" failonerror="true">
                                    <arg line="rmi -f ${XDEBUG_BUILDER_IMAGE} ${PHP_LS_IMAGE}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>                
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
